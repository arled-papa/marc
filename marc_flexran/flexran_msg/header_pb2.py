# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: header.proto

# google protobuf file automatically generated for FlexRAN
import sys
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database

_b = sys.version_info[0] < 3 and (lambda x: x) or (lambda x: x.encode('latin1'))


# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()

DESCRIPTOR = _descriptor.FileDescriptor(
  name='header.proto',
  package='protocol',
  serialized_pb=_b('\n\x0cheader.proto\x12\x08protocol\"9\n\x0b\x66lex_header\x12\x0f\n\x07version\x18\x01 \x01(\r\x12\x0c\n\x04type\x18\x02 \x01(\r\x12\x0b\n\x03xid\x18\x04 \x01(\r*\xc4\x03\n\tflex_type\x12\x0e\n\nFLPT_HELLO\x10\x00\x12\x15\n\x11\x46LPT_ECHO_REQUEST\x10\x01\x12\x13\n\x0f\x46LPT_ECHO_REPLY\x10\x02\x12\x16\n\x12\x46LPT_STATS_REQUEST\x10\x03\x12\x14\n\x10\x46LPT_STATS_REPLY\x10\x04\x12\x13\n\x0f\x46LPT_SF_TRIGGER\x10\x05\x12\x13\n\x0f\x46LPT_UL_SR_INFO\x10\x06\x12\x1f\n\x1b\x46LPT_GET_ENB_CONFIG_REQUEST\x10\x07\x12\x1d\n\x19\x46LPT_GET_ENB_CONFIG_REPLY\x10\x08\x12\x1e\n\x1a\x46LPT_GET_UE_CONFIG_REQUEST\x10\t\x12\x1c\n\x18\x46LPT_GET_UE_CONFIG_REPLY\x10\n\x12\x1e\n\x1a\x46LPT_GET_LC_CONFIG_REQUEST\x10\x0b\x12\x1c\n\x18\x46LPT_GET_LC_CONFIG_REPLY\x10\x0c\x12\x16\n\x12\x46LPT_DL_MAC_CONFIG\x10\r\x12\x18\n\x14\x46LPT_UE_STATE_CHANGE\x10\x0e\x12\x19\n\x15\x46LPT_DELEGATE_CONTROL\x10\x0f\x12\x1a\n\x16\x46LPT_RECONFIGURE_AGENT\x10\x10')
)
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

_FLEX_TYPE = _descriptor.EnumDescriptor(
  name='flex_type',
  full_name='protocol.flex_type',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='FLPT_HELLO', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FLPT_ECHO_REQUEST', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FLPT_ECHO_REPLY', index=2, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FLPT_STATS_REQUEST', index=3, number=3,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FLPT_STATS_REPLY', index=4, number=4,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FLPT_SF_TRIGGER', index=5, number=5,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FLPT_UL_SR_INFO', index=6, number=6,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FLPT_GET_ENB_CONFIG_REQUEST', index=7, number=7,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FLPT_GET_ENB_CONFIG_REPLY', index=8, number=8,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FLPT_GET_UE_CONFIG_REQUEST', index=9, number=9,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FLPT_GET_UE_CONFIG_REPLY', index=10, number=10,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FLPT_GET_LC_CONFIG_REQUEST', index=11, number=11,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FLPT_GET_LC_CONFIG_REPLY', index=12, number=12,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FLPT_DL_MAC_CONFIG', index=13, number=13,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FLPT_UE_STATE_CHANGE', index=14, number=14,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FLPT_DELEGATE_CONTROL', index=15, number=15,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FLPT_RECONFIGURE_AGENT', index=16, number=16,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=86,
  serialized_end=538,
)
_sym_db.RegisterEnumDescriptor(_FLEX_TYPE)

flex_type = enum_type_wrapper.EnumTypeWrapper(_FLEX_TYPE)
FLPT_HELLO = 0
FLPT_ECHO_REQUEST = 1
FLPT_ECHO_REPLY = 2
FLPT_STATS_REQUEST = 3
FLPT_STATS_REPLY = 4
FLPT_SF_TRIGGER = 5
FLPT_UL_SR_INFO = 6
FLPT_GET_ENB_CONFIG_REQUEST = 7
FLPT_GET_ENB_CONFIG_REPLY = 8
FLPT_GET_UE_CONFIG_REQUEST = 9
FLPT_GET_UE_CONFIG_REPLY = 10
FLPT_GET_LC_CONFIG_REQUEST = 11
FLPT_GET_LC_CONFIG_REPLY = 12
FLPT_DL_MAC_CONFIG = 13
FLPT_UE_STATE_CHANGE = 14
FLPT_DELEGATE_CONTROL = 15
FLPT_RECONFIGURE_AGENT = 16



_FLEX_HEADER = _descriptor.Descriptor(
  name='flex_header',
  full_name='protocol.flex_header',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='version', full_name='protocol.flex_header.version', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='type', full_name='protocol.flex_header.type', index=1,
      number=2, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='xid', full_name='protocol.flex_header.xid', index=2,
      number=4, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=26,
  serialized_end=83,
)

DESCRIPTOR.message_types_by_name['flex_header'] = _FLEX_HEADER
DESCRIPTOR.enum_types_by_name['flex_type'] = _FLEX_TYPE

flex_header = _reflection.GeneratedProtocolMessageType('flex_header', (_message.Message,), dict(
  DESCRIPTOR = _FLEX_HEADER,
  __module__ = 'header_pb2'
  # @@protoc_insertion_point(class_scope:protocol.flex_header)
  ))
_sym_db.RegisterMessage(flex_header)


# @@protoc_insertion_point(module_scope)
